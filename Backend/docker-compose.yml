services:
  # Grafana - interface unificada
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - jaeger
    networks:
      - elk-net

  frontend:
    build:
      context: ../Frontend
    container_name: frontend
    ports:
      - "8084:80"  # A aplicação será servida na porta 80
    env_file:
      - .env
    networks:
      - elk-net
  curso:
    image: curso
    depends_on:
      logstash:
        condition: service_healthy
    environment:
      - spring.data.mongodb.uri=${MONGODB_URL}
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
      - SPRING_PROFILES_ACTIVE=dev
      - MANAGEMENT_TRACING_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    ports:
      - "8082:8082"
    env_file:
      - .env
    networks:
      - elk-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: elk_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.2
    container_name: elk_logstash
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9600" ]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      - elasticsearch
    ports:
      - 15000:5000     # porta p/ appender TCP
      - 9600:9600     # API de monitoring
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    networks:
      - elk-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    container_name: elk_kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - elk-net

  # Prometheus - métricas
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - elk-net

  # Jaeger - tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "4318:4318"  # OTLP HTTP
    networks:
      - elk-net

  mongo-database:
    image: mongo:latest
    container_name: "database"
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db  # Volume persistente
    networks:
      - elk-net

networks:
  elk-net:
    driver: bridge

volumes:
  grafana-storage:
  esdata:
  mongo_data:
